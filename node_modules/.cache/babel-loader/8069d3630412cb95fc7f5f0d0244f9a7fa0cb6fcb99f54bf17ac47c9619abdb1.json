{"ast":null,"code":"import axios from \"axios\";\nexport default {\n  name: \"UserList\",\n  data() {\n    return {\n      users: [],\n      selectedUser: null\n    };\n  },\n  methods: {\n    async fetchUsers() {\n      try {\n        const response = await axios.get(\"https://randomuser.me/api/?results=7\");\n        this.users = response.data.results;\n      } catch (error) {\n        console.error(\"Error fetching users:\", error);\n      }\n    },\n    openUserDetails(user) {\n      console.log(\"clicked user\", user);\n    },\n    formatDate(date) {\n      const d = new Date(date);\n      const day = String(d.getDate()).padStart(2, \"0\");\n      const month = d.toLocaleString(\"en-US\", {\n        month: \"short\"\n      });\n      const year = d.getFullYear();\n      return `${day} ${month} ${year}`;\n    },\n    capitalize(word) {\n      if (!word) return \"\";\n      return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n    }\n  },\n  created() {\n    this.fetchUsers();\n  }\n};","map":{"version":3,"names":["axios","name","data","users","selectedUser","methods","fetchUsers","response","get","results","error","console","openUserDetails","user","log","formatDate","date","d","Date","day","String","getDate","padStart","month","toLocaleString","year","getFullYear","capitalize","word","charAt","toUpperCase","slice","toLowerCase","created"],"sources":["/Users/zihengwang/Desktop/my-project/src/components/UserList.vue"],"sourcesContent":["<template>\n  <div class=\"user-list-wrapper\">\n    <div class=\"max-width\">\n      <!-- Table Header -->\n      <div class=\"table-header\">\n        <div>Date</div>\n        <div>Name</div>\n        <div>Gender</div>\n        <div>Country</div>\n        <div>Email</div>\n      </div>\n\n      <!-- User Rows -->\n      <div class=\"user-rows-container\">\n        <div\n          v-for=\"user in users\"\n          :key=\"user.email\"\n          class=\"user-row\"\n          @click=\"openUserDetails(user)\"\n        >\n          <div class=\"gray-text\">{{ formatDate(user.dob.date) }}</div>\n          <div class=\"black-text hover-link\">{{ user.name.first }} {{ user.name.last }}</div>\n          <div class=\"gray-text\">{{ capitalize(user.gender) }}</div>\n          <div class=\"black-text\">{{ user.location.country }}</div>\n          <div class=\"gray-text email\">{{ user.email }}</div>\n        </div>\n      </div>\n\n      <!-- Refresh Button -->\n      <div class=\"refresh-wrapper\">\n        <button @click=\"fetchUsers\" class=\"refresh-button\">\n          <i class=\"fas fa-sync-alt\"></i> Refresh\n        </button>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"UserList\",\n  data() {\n    return {\n      users: [],\n      selectedUser: null,\n    };\n  },\n  methods: {\n    async fetchUsers() {\n      try {\n        const response = await axios.get(\"https://randomuser.me/api/?results=7\");\n        this.users = response.data.results;\n      } catch (error) {\n        console.error(\"Error fetching users:\", error);\n      }\n    },\n    openUserDetails(user) {\n      console.log(\"clicked user\", user);\n    },\n    formatDate(date) {\n      const d = new Date(date);\n      const day = String(d.getDate()).padStart(2, \"0\");\n      const month = d.toLocaleString(\"en-US\", { month: \"short\" });\n      const year = d.getFullYear();\n      return `${day} ${month} ${year}`;\n    },\n    capitalize(word) {\n      if (!word) return \"\";\n      return word.charAt(0).toUpperCase() + word.slice(1).toLowerCase();\n    },\n  },\n  created() {\n    this.fetchUsers();\n  },\n};\n</script>\n\n<style scoped>\n.user-list-wrapper {\n  background-color: white;\n  min-height: 100vh;\n  padding: 2rem 1rem;\n  margin-top: 50px;\n  width: 50%;\n  margin-left: 20%;\n}\n\n.max-width {\n  max-width: 1000px;\n  margin: 0 auto;\n}\n\n.table-header {\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  background-color: white;\n  color: gray;\n  font-weight: 600;\n  font-size: 0.75rem;\n  padding: 0.75rem 1rem;\n}\n\n.user-rows-container {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  margin-top: 1rem;\n}\n\n.user-row {\n  display: grid;\n  grid-template-columns: repeat(5, 1fr);\n  background-color: #ffffff;\n  padding: 1rem;\n  border-radius: 0.3rem;\n  box-shadow: 0 1px 4px rgba(0,0,0,0.1);\n  font-size: 0.875rem;\n  cursor: pointer;\n  height: 5%;\n  transition: background-color 0.3s, box-shadow 0.3s;\n}\n\n.user-row:hover {\n  background-color: #f0faff;\n  box-shadow: 0 4px 8px rgba(0,0,0,0.15);\n}\n\n.black-text {\n  color: black;\n}\n\n.gray-text {\n  color: #6b7280;\n}\n\n.hover-link:hover {\n  text-decoration: underline;\n}\n\n.email {\n  word-break: break-word;\n}\n\n.refresh-wrapper {\n  display: flex;\n  justify-content: center;\n  margin-top: 2rem;\n}\n\n.refresh-button {\n  background-color: #2fc0df;\n  color: white;\n  padding: 0.5rem 1.5rem;\n  border-radius: 0.375rem;\n  transition: background-color 0.3s;\n  font-size: 0.875rem;\n  border: none;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.refresh-button:hover {\n  background-color: #28a6c2;\n}\n</style>\n"],"mappings":"AAuCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,UAAU;EAChBC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,KAAK,EAAE,EAAE;MACTC,YAAY,EAAE;IAChB,CAAC;EACH,CAAC;EACDC,OAAO,EAAE;IACP,MAAMC,UAAUA,CAAA,EAAG;MACjB,IAAI;QACF,MAAMC,QAAO,GAAI,MAAMP,KAAK,CAACQ,GAAG,CAAC,sCAAsC,CAAC;QACxE,IAAI,CAACL,KAAI,GAAII,QAAQ,CAACL,IAAI,CAACO,OAAO;MACpC,EAAE,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C;IACF,CAAC;IACDE,eAAeA,CAACC,IAAI,EAAE;MACpBF,OAAO,CAACG,GAAG,CAAC,cAAc,EAAED,IAAI,CAAC;IACnC,CAAC;IACDE,UAAUA,CAACC,IAAI,EAAE;MACf,MAAMC,CAAA,GAAI,IAAIC,IAAI,CAACF,IAAI,CAAC;MACxB,MAAMG,GAAE,GAAIC,MAAM,CAACH,CAAC,CAACI,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC;MAChD,MAAMC,KAAI,GAAIN,CAAC,CAACO,cAAc,CAAC,OAAO,EAAE;QAAED,KAAK,EAAE;MAAQ,CAAC,CAAC;MAC3D,MAAME,IAAG,GAAIR,CAAC,CAACS,WAAW,CAAC,CAAC;MAC5B,OAAO,GAAGP,GAAG,IAAII,KAAK,IAAIE,IAAI,EAAE;IAClC,CAAC;IACDE,UAAUA,CAACC,IAAI,EAAE;MACf,IAAI,CAACA,IAAI,EAAE,OAAO,EAAE;MACpB,OAAOA,IAAI,CAACC,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,IAAIF,IAAI,CAACG,KAAK,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IACnE;EACF,CAAC;EACDC,OAAOA,CAAA,EAAG;IACR,IAAI,CAAC3B,UAAU,CAAC,CAAC;EACnB;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}